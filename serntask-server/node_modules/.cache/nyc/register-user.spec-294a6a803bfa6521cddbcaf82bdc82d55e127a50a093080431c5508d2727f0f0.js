function cov_1vhfb6gijm(){var path="/Users/sergibittangonzalez/Desktop/SERNtask/serntask-server/logic/register-user.spec.js";var hash="44e528e5f6941b1e783411094d60ee5e49600f61";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/sergibittangonzalez/Desktop/SERNtask/serntask-server/logic/register-user.spec.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:26}},"1":{start:{line:2,column:19},end:{line:2,column:34}},"2":{start:{line:3,column:39},end:{line:3,column:63}},"3":{start:{line:4,column:39},end:{line:4,column:46}},"4":{start:{line:6,column:19},end:{line:6,column:23}},"5":{start:{line:7,column:15},end:{line:7,column:32}},"6":{start:{line:8,column:21},end:{line:8,column:47}},"7":{start:{line:10,column:0},end:{line:169,column:2}},"8":{start:{line:13,column:4},end:{line:16,column:5}},"9":{start:{line:14,column:8},end:{line:15,column:42}},"10":{start:{line:15,column:24},end:{line:15,column:41}},"11":{start:{line:18,column:4},end:{line:22,column:6}},"12":{start:{line:19,column:8},end:{line:19,column:33}},"13":{start:{line:20,column:8},end:{line:20,column:44}},"14":{start:{line:21,column:8},end:{line:21,column:41}},"15":{start:{line:24,column:4},end:{line:45,column:6}},"16":{start:{line:27,column:28},end:{line:27,column:69}},"17":{start:{line:29,column:8},end:{line:29,column:43}},"18":{start:{line:31,column:21},end:{line:31,column:50}},"19":{start:{line:32,column:8},end:{line:32,column:20}},"20":{start:{line:34,column:8},end:{line:34,column:29}},"21":{start:{line:35,column:8},end:{line:35,column:41}},"22":{start:{line:36,column:8},end:{line:36,column:39}},"23":{start:{line:37,column:8},end:{line:37,column:43}},"24":{start:{line:38,column:8},end:{line:38,column:45}},"25":{start:{line:39,column:8},end:{line:39,column:54}},"26":{start:{line:41,column:26},end:{line:41,column:71}},"27":{start:{line:43,column:8},end:{line:43,column:37}},"28":{start:{line:44,column:8},end:{line:44,column:36}},"29":{start:{line:47,column:4},end:{line:67,column:6}},"30":{start:{line:51,column:8},end:{line:56,column:10}},"31":{start:{line:52,column:25},end:{line:52,column:69}},"32":{start:{line:54,column:12},end:{line:54,column:24}},"33":{start:{line:55,column:12},end:{line:55,column:29}},"34":{start:{line:58,column:8},end:{line:66,column:10}},"35":{start:{line:59,column:12},end:{line:65,column:13}},"36":{start:{line:60,column:16},end:{line:60,column:57}},"37":{start:{line:61,column:16},end:{line:61,column:53}},"38":{start:{line:63,column:16},end:{line:63,column:56}},"39":{start:{line:64,column:16},end:{line:64,column:71}},"40":{start:{line:164,column:4},end:{line:167,column:6}},"41":{start:{line:165,column:8},end:{line:165,column:31}},"42":{start:{line:166,column:8},end:{line:166,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:25},end:{line:10,column:26}},loc:{start:{line:10,column:31},end:{line:169,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:13,column:11},end:{line:13,column:12}},loc:{start:{line:14,column:8},end:{line:15,column:42}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:15,column:18},end:{line:15,column:19}},loc:{start:{line:15,column:24},end:{line:15,column:41}},line:15},"3":{name:"(anonymous_3)",decl:{start:{line:18,column:15},end:{line:18,column:16}},loc:{start:{line:18,column:21},end:{line:22,column:5}},line:18},"4":{name:"(anonymous_4)",decl:{start:{line:24,column:41},end:{line:24,column:42}},loc:{start:{line:24,column:53},end:{line:45,column:5}},line:24},"5":{name:"(anonymous_5)",decl:{start:{line:47,column:40},end:{line:47,column:41}},loc:{start:{line:47,column:46},end:{line:67,column:5}},line:47},"6":{name:"(anonymous_6)",decl:{start:{line:51,column:19},end:{line:51,column:20}},loc:{start:{line:51,column:31},end:{line:56,column:9}},line:51},"7":{name:"(anonymous_7)",decl:{start:{line:58,column:36},end:{line:58,column:37}},loc:{start:{line:58,column:48},end:{line:66,column:9}},line:58},"8":{name:"(anonymous_8)",decl:{start:{line:164,column:10},end:{line:164,column:11}},loc:{start:{line:164,column:22},end:{line:167,column:5}},line:164}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"44e528e5f6941b1e783411094d60ee5e49600f61"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1vhfb6gijm=function(){return actualCoverage;};}return actualCoverage;}cov_1vhfb6gijm();cov_1vhfb6gijm().s[0]++;require('dotenv').config();const{expect}=(cov_1vhfb6gijm().s[1]++,require('chai'));const{mongoose,models:{User}}=(cov_1vhfb6gijm().s[2]++,require('serntask-data'));const{env:{TEST_MONGODB_URL}}=(cov_1vhfb6gijm().s[3]++,process);const{random}=(cov_1vhfb6gijm().s[4]++,Math);const bcrypt=(cov_1vhfb6gijm().s[5]++,require('bcrypt'));const registerUser=(cov_1vhfb6gijm().s[6]++,require('./register-user'));cov_1vhfb6gijm().s[7]++;describe('registerUser',()=>{cov_1vhfb6gijm().f[0]++;let name,email,password;cov_1vhfb6gijm().s[8]++;before(()=>{cov_1vhfb6gijm().f[1]++;cov_1vhfb6gijm().s[9]++;return mongoose.connect(TEST_MONGODB_URL,{useNewUrlParser:true,useUnifiedTopology:true}).then(()=>{cov_1vhfb6gijm().f[2]++;cov_1vhfb6gijm().s[10]++;return User.deleteMany();});});cov_1vhfb6gijm().s[11]++;beforeEach(()=>{cov_1vhfb6gijm().f[3]++;cov_1vhfb6gijm().s[12]++;name=`name-${random()}`;cov_1vhfb6gijm().s[13]++;email=`email-${random()}@mail.com`;cov_1vhfb6gijm().s[14]++;password=`password-${random()}`;});cov_1vhfb6gijm().s[15]++;it('should succeed on correct data',async()=>{cov_1vhfb6gijm().f[4]++;let id;const returnValue=(cov_1vhfb6gijm().s[16]++,await registerUser(name,email,password));cov_1vhfb6gijm().s[17]++;expect(returnValue).to.be.undefined;const user=(cov_1vhfb6gijm().s[18]++,await User.findOne({email}));cov_1vhfb6gijm().s[19]++;id=user.id;cov_1vhfb6gijm().s[20]++;expect(user).to.exist;cov_1vhfb6gijm().s[21]++;expect(user.id).to.be.a('string');cov_1vhfb6gijm().s[22]++;expect(user.id).to.be.equal(id);cov_1vhfb6gijm().s[23]++;expect(user.name).to.be.equal(name);cov_1vhfb6gijm().s[24]++;expect(user.email).to.be.equal(email);cov_1vhfb6gijm().s[25]++;expect(user.created).to.be.an.instanceOf(Date);const _password=(cov_1vhfb6gijm().s[26]++,await bcrypt.compare(password,user.password));cov_1vhfb6gijm().s[27]++;expect(_password).to.be.exist;cov_1vhfb6gijm().s[28]++;expect(_password).to.be.true;});cov_1vhfb6gijm().s[29]++;describe('when user already exist',()=>{cov_1vhfb6gijm().f[5]++;let id;// creamos al usuario
cov_1vhfb6gijm().s[30]++;beforeEach(async()=>{cov_1vhfb6gijm().f[6]++;const user=(cov_1vhfb6gijm().s[31]++,await User.create({name,email,password}));cov_1vhfb6gijm().s[32]++;id=user.id;cov_1vhfb6gijm().s[33]++;await user.save();});cov_1vhfb6gijm().s[34]++;it('should fail and throw',async()=>{cov_1vhfb6gijm().f[7]++;cov_1vhfb6gijm().s[35]++;try{cov_1vhfb6gijm().s[36]++;await registerUser(name,email,password);cov_1vhfb6gijm().s[37]++;throw new Error('user already exist');}catch(error){cov_1vhfb6gijm().s[38]++;expect(error).to.be.an.instanceOf(Error);cov_1vhfb6gijm().s[39]++;expect(error.message).to.be.equal('user already exist');}});});// Estos errores no estan contemplados aquÃ­. (a falta de function validate)
// it('should fail on non-string or empty name', () => {
//     name = 1
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `name ${name} is not a string`)
//     name = true
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `name ${name} is not a string`)
//     name = {}
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `name ${name} is not a string`)
//     name = undefined
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `name ${name} is not a string`)
//     name = ''
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(Error, `name is required`)
// })
// it('should fail on-non string or empty email', () => {
//     email = 1
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `email ${email} is not a string`)
//     email = true
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `email ${email} is not a string`)
//     email = {}
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `email ${email} is not a string`)
//     email = undefined
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `name ${email} is not a string`)
//     email = ''
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(Error, `email is empty`)
// })
// it('should fail on-wrong email format', () => {
//     email = 'email'
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(ContentError, `email ${email} is not an e-mail`)
//     email = 'email@email--';
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(ContentError, `email ${email} is not an e-mail`)
// })
// it('should fail on non-string or empty password', () => {
//     password = 1
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `password ${password} is not a string`)
//     password = true
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `password ${password} is not a string`)
//     password = {}
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `password ${password} is not a string`)
//     password = undefined
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(TypeError, `name ${password} is not a string`)
//     password = ''
//     expect(() =>
//         registerUser(name, email, password)
//     ).to.throw(Error, `password is empty`)
cov_1vhfb6gijm().s[40]++;after(async()=>{cov_1vhfb6gijm().f[8]++;cov_1vhfb6gijm().s[41]++;await User.deleteMany();cov_1vhfb6gijm().s[42]++;await mongoose.disconnect();});});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,